- name: Check postgresql installed
  shell: '{{ PGHOME }}/bin/pg_isready -h {{ ansible_fqdn }} -p {{ ports.pg }}'
  become_user: postgres
  become: true
  register: pg_ready

- name: Install pgbouncer service
  block:

    - name: make pgbouncer systemd script
      template:
        src: pgbouncer.service.j2
        dest: "{{ service_path_dir }}/pgbouncer.service"
        owner: root
        group: root
        mode: 0644

    - name: ensure doc directory exist
      file:
        path: "{{ user_share_dir }}/doc/"
        state: directory
        owner: root
        group: root
        mode: 0750

    - name: copy pgbouncer bin
      copy:
        src: '{{ local_distr_path }}/pgbouncer{{ pgbouncer_files.bin_path }}'
        dest: "{{ pgbouncer_files.bin_path }}"
        mode: a+x

    - name: copy pgbouncer files from distrib
      copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
      with_items:
        - { src: '{{ local_distr_path }}/pgbouncer{{ user_share_dir }}/doc/pgbouncer/',       dest: '{{ user_share_dir }}/doc/' }
        - { src: '{{ local_distr_path }}/pgbouncer{{ user_share_dir }}/man/man1/pgbouncer.1', dest: '{{ user_share_dir }}/man/man1/' }
        - { src: '{{ local_distr_path }}/pgbouncer{{ user_share_dir }}/man/man5/pgbouncer.5', dest: '{{ user_share_dir }}/man/man5/' }

    - name: ensure config directory {{ pgbouncer_files.conf_dir }} exist
      file:
        path: "{{ pgbouncer_files.conf_dir }}"
        state: directory
        owner: postgres
        group: postgres
        mode: 0700

    - name: make pgbouncer config from template
      template:
        src: pgbouncer.ini.j2
        dest: "{{ pgbouncer_files.conf_dir }}/pgbouncer.ini"
        owner: postgres
        group: postgres
        mode: 0600
        trim_blocks: False
      register: pgbouncer_istalled

    - name: make pgbouncer userlist from template
      template:
        src: userlist.txt.j2
        dest: "{{ pgbouncer_files.conf_dir }}/userlist.txt"
        owner: postgres
        group: postgres
        mode: 0600

    - name: reload systemd and start service
      systemd:
        name: pgbouncer
        state: started
        daemon_reload: yes
        enabled: yes

    - name: wait when port {{ ports.pgbouncer }} to become open on the host
      wait_for:
        port: "{{ ports.pgbouncer }}"
        host: "{{ ansible_fqdn }}"
        state: started
        timeout: 10
        delay: 5

    - name: setup logrotate configuration
      template:
        src: pgbouncer.j2
        dest: "{{ logrorate_dir }}/pgbouncer"
        owner: root
        group: root
        mode: 0644

  become: true
  when: "'accepting' in pg_ready.stdout"