- name: Create backup of pgbouncer files
  block:

    - name: backup configs
      file:
        path: "{{ item.dir }}"
        state: "{{ item.state }}"
        owner: postgres
        group: postgres
        mode: 0700
      with_items:
        - { dir: "{{ backup.pgbouncer }}",                                     state: absent }
        - { dir: "{{ backup.pgbouncer }}",                                     state: directory }
        - { dir: "{{ backup.pgbouncer }}{{ pgbouncer_files.conf_dir }}",       state: directory }
        - { dir: "{{ backup.pgbouncer }}{{ bin_dir }}",                        state: directory }
        - { dir: "{{ backup.pgbouncer }}{{ user_share_dir }}/doc",             state: directory }
        - { dir: "{{ backup.pgbouncer }}{{ user_share_dir }}/man/man1",        state: directory }
        - { dir: "{{ backup.pgbouncer }}{{ user_share_dir }}/man/man5",        state: directory }
        - { dir: "{{ backup_root_dir }}{{ logrorate_dir }}",                   state: directory }

    - name: backup leftover pgbouncer files
      copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: "{{ item.owner }}"
        group: "{{ item.group }}"
        remote_src: true
        directory_mode: yes
      with_items:
        - { src: "{{ pgbouncer_files.conf_dir }}/userlist.txt",  dest: "{{ backup.pgbouncer }}{{ pgbouncer_files.conf_dir }}/", owner: postgres, group: postgres }
        - { src: "{{ service_path_dir }}/pgbouncer.service",     dest: "{{ backup_root_dir }}{{ service_path_dir }}/",          owner: root,     group: root }
        - { src: "{{ logrorate_dir }}/pgbouncer",                dest: "{{ backup_root_dir }}{{ logrorate_dir }}",              owner: root,     group: root }
        - { src: "{{ pgbouncer_files.bin_path }}",               dest: "{{ backup.pgbouncer }}{{ bin_dir }}",                   owner: root,     group: root }
        - { src: "{{ user_share_dir }}/doc",                     dest: "{{ backup.pgbouncer }}{{ user_share_dir }}/",           owner: root,     group: root }
        - { src: "{{ user_share_dir }}/man/man1/pgbouncer.1",    dest: "{{ backup.pgbouncer }}{{ user_share_dir }}/man/man1/",  owner: root,     group: root }
        - { src: "{{ user_share_dir }}/man/man5/pgbouncer.5",    dest: "{{ backup.pgbouncer }}{{ user_share_dir }}/man/man5/",  owner: root,     group: root }
        - { src: "{{ pgbouncer_files.conf_dir }}/pgbouncer.ini", dest: "{{ backup.pgbouncer }}{{ pgbouncer_files.conf_dir }}/", owner: postgres, group: postgres }

  when: pgbouncer

- name: Backup confd
  block:

  - name: ensure {{ backup.confd }}
    file:
      path: "{{ item.src }}"
      state: "{{ item.state }}"
      owner: postgres
      group: postgres
      mode: 0700
    with_items:
      - { src: "{{ backup.confd }}",                            state: absent }
      - { src: "{{ backup.confd }}/{{ confd_files.path_dir }}", state: directory }
      - { src: "{{ backup.confd }}/{{ confd_files.conf_dir }}", state: directory }
      - { src: "{{ backup.confd }}/{{ service_path_dir }}",     state: directory }

  - name: backup confd files
    synchronize:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
    with_items:
      - { src: '{{ confd_files.path_dir }}/',      dest: '{{ backup.confd }}/{{ confd_files.path_dir }}' }
      - { src: '{{ confd_files.conf_dir }}/',      dest: '{{ backup.confd }}/{{ confd_files.conf_dir }}' }
      - { src: '{{ confd_files.service_file }}',   dest: '{{ backup.confd }}/{{ service_path_dir }}' }
    delegate_to: "{{ inventory_hostname }}"
    become_user: root

  become: true
  when: confd