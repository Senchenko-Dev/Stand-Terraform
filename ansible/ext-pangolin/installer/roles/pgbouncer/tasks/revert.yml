- name: Recovery pgbouncer
  block:

    - name: gather services facts
      service_facts:

    - name: stop pgbouncer service
      service:
        name: pgbouncer
        state: stopped
      when: ansible_facts.services['pgbouncer.service'].state == 'running'

    - name: return pgbouncer files to previous state
      copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: "{{ item.owner }}"
        group: "{{ item.group }}"
        remote_src: true
        directory_mode: yes
      with_items:
        - { src: "{{ backup.pgbouncer }}{{ pgbouncer_files.conf_dir }}/userlist.txt",  dest: "{{ pgbouncer_files.conf_dir }}/", owner: postgres, group: postgres }
        - { src: "{{ backup_root_dir }}{{ service_path_dir }}/pgbouncer.service",      dest: "{{ service_path_dir }}/",         owner: root,     group: root }
        - { src: "{{ backup_root_dir }}{{ logrorate_dir }}/pgbouncer",                 dest: "{{ logrorate_dir }}/",            owner: root,     group: root }
        - { src: "{{ backup.pgbouncer }}{{ pgbouncer_files.bin_path }}",               dest: "{{ bin_dir }}/",                  owner: root,     group: root }
        - { src: "{{ backup.pgbouncer }}{{ user_share_dir }}/doc",                     dest: "{{ user_share_dir }}/",           owner: root,     group: root }
        - { src: "{{ backup.pgbouncer }}{{ user_share_dir }}/man/man1/pgbouncer.1",    dest: "{{ user_share_dir }}/man/man1/",  owner: root,     group: root }
        - { src: "{{ backup.pgbouncer }}{{ user_share_dir }}/man/man5/pgbouncer.5",    dest: "{{ user_share_dir }}/man/man5/",  owner: root,     group: root }
        - { src: "{{ backup.pgbouncer }}{{ pgbouncer_files.conf_dir }}/pgbouncer.ini", dest: "{{ pgbouncer_files.conf_dir }}/", owner: postgres, group: postgres }

    - name: check exists confd
      stat: path="{{ confd_files.path_dir }}/bin/confd"
      register: confd_exists

    - name: revert bouncer config for confd
      block:

        - name: revert confd template file
          copy:
            src: "{{ backup.pgbouncer }}{{ confd_files.conf_dir }}/templates/pgbouncer.tmpl"
            dest: "{{ confd_files.conf_dir }}/templates/pgbouncer.tmpl"
            owner: postgres
            group: postgres
            mode: 0600
            remote_src: true

        - name: restart systemd and start service
          systemd:
            name: confd
            state: restarted

      when: confd_exists.stat.exists

    - name: restarted systemd and start service
      systemd:
        name: pgbouncer
        state: restarted
        daemon_reload: yes
        enabled: yes

    - name: wait when pgbouncer service to open the port
      wait_for:
        port: "{{ ports.pgbouncer }}"
        host: "{{ ansible_fqdn }}"
        state: started
        timeout: 10
        delay: 5

  become: true
