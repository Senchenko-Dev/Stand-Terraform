[databases]
* = host={{ ansible_fqdn }} port={{ ports.pg }} auth_port={{ ports.pgbouncer_pg_auth }} auth_pool_size=1

[pgbouncer]
 listen_port = {{ ports.pgbouncer }}
 listen_addr = *
 auth_type = scram-sha-256
 auth_file = {{ pgbouncer_files.conf_dir }}/userlist.txt
 auth_proxy = on
 auth_failure_threshold = 3
 auth_inactivity_period = 60
 auth_last_size = 10
 log_audit = 1
 logfile = {{ pgbouncer_files.log_dir }}/pgbouncer.log
 pidfile = {{ pgbouncer_files.pid_dir }}/pgbouncer.pid
 admin_users = pgbouncer
 max_client_conn = {{ ansible_processor_vcpus*100 }}
 pool_mode = transaction
 min_pool_size = 0
 default_pool_size = {{ pg_max_connections|int - pg_coef_conns }}
 max_db_connections = {{ pg_max_connections|int - pg_coef_conns }}
 max_user_connections = {{ pg_max_connections|int - pg_coef_conns }}
 ignore_startup_parameters = extra_float_digits
 unix_socket_dir =
{% if ssl_mode %}
#  TLS settings
server_tls_protocols = secure
server_tls_ciphers = secure
server_tls_sslmode = verify-full
server_tls_ca_file = {{ pg_certs_pwd.root_ca }}
server_tls_cert_file = {{ pg_certs_pwd.pgbouncer_cert }}
server_tls_key_file = {{ pg_certs_pwd.pgbouncer_key }}
client_tls_protocols = secure
client_tls_ciphers = secure
client_tls_sslmode = {{ pgbouncer_client_tls_sslmode }}
client_tls_ca_file = {{ pg_certs_pwd.root_ca }}
client_tls_cert_file = {{ pg_certs_pwd.server_cert }}
client_tls_key_file = {{ pg_certs_pwd.server_key }}
{% endif %}