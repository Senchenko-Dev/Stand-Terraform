- name: Common task for master, replica and etcd
  block:

    - name: save PGDATA_OLD to etcd host
      set_fact:
        PGDATA_OLD: "{{ PGDATA_OLD }}"
      run_once: true

    - name: ensure {{ backup.etcd }} directory exist
      file:
        path: "{{ item.src }}"
        state: "{{ item.state }}"
        mode: 0700
      with_items:
        - { src: "{{ backup.etcd }}",                           state: "absent" }
        - { src: "{{ backup.etcd }}{{ etcd_files.conf_dir }}/", state: "directory" }
        - { src: "{{ backup.etcd }}/db_backup",                 state: "directory" }
        - { src: "{{ backup.etcd }}/{{ PGDATA_OLD }}/",         state: "directory" }

    - name: save version etcd old
      set_fact:
        etcd_old_version: "{{ ansible_facts.packages['etcd'][0].version }}"

    - name: download previous etcd package but do not install it
      yum:
        name:
          - "etcd-{{ ansible_facts.packages['etcd'][0].version }}"
        state: present
        download_only: true
        download_dir: "{{ backup.etcd }}"
      when: ansible_os_family == "RedHat"
    
    - name: download previous etcd package but do not install it
      shell: "{{ item }}"
      with_items:
        - "apt-get install -dy --reinstall etcd={{ ansible_facts.packages['etcd'][0].version }}"
        - "cp /var/cache/apt/archives/etcd_* {{ backup.etcd }}"
      when: ansible_os_family == "Altlinux"

    - name: copy etcd files to {{ backup.etcd }}
      copy:
        src: "{{ item }}"
        dest: "{{ backup.etcd }}{{ etcd_files.conf_dir }}"
        remote_src: yes
      with_items:
        - "{{ etcd_files.conf_dir }}/etcd.conf"
        - "{{ etcd_files.conf_dir }}/etcd.conf.base"
    
    - name: backup etcd service
      copy:
        src: "{{ service_path_dir }}/etcd.service"
        dest: "{{ backup_root_dir }}{{ service_path_dir }}/etcd.service"
        remote_src: yes
        owner: root
        group: root

    - name: backup etcd data for current node
      copy:
        src: "{{ etcd_files.data_dir }}"
        dest: "{{ backup.etcd }}/db_backup"
        owner: etcd
        group: etcd
        mode: 0700
        remote_src: yes

    - name: backup patroni.dynamic.json
      copy:
        src: "{{ PGDATA_OLD }}/patroni.dynamic.json"
        dest: "{{ backup.etcd }}/{{ PGDATA_OLD }}/patroni.dynamic.json"
        owner: postgres
        group: postgres
        remote_src: yes
        mode: 0600
      when: inventory_hostname != 'etcd'
        
  become: true