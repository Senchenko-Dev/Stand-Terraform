- name: Remove old installation etcd service
  block:

    - name: remove etcd configure
      shell: etcdctl del service/{{ clustername }}/initialize || true
      environment:
        ETCDCTL_API: 3

    - name: stop service etcd, if started
      systemd:
        name: etcd
        state: stopped
      register: result
      until: result.status.ActiveState != 'active'
      retries: 6
      delay: 10

    - name: remove etcd package
      package:
        name: etcd
        state: absent

  become: true
  when: "'etcd' in ansible_facts.packages"

- name: Remove old directory/files, if exist
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "{{ etcd_files.conf_dir }}"
    - "{{ etcd_files.data_dir }}"
    - "{{ service_path_dir }}/etcd.service"
  ignore_errors: yes
  become: true

- name: Install etcd
  include_role:
    name: common
    tasks_from: install_versioned_package
  vars:
    _install_versioned_package_name: etcd
    _install_versioned_package_version: "{{ versions.etcd }}"

- name: Restart and reconfig etcd
  block:

    - name: move default etcd config
      shell: |
        set -o pipefail
        mv {{ etcd_files.conf_dir }}/etcd.conf {{ etcd_files.conf_dir }}/etcd.conf.base

    - name: make etcd config from template
      template:
        src: etcd.conf.j2
        dest: "{{ etcd_files.conf_dir }}/etcd.conf"

    - name: register etcd service in systemd
      template:
        src: etcd.service.j2
        dest: "{{ service_path_dir }}/etcd.service"
        owner: postgres
        group: postgres
        mode: 0640

    - name: change permissions for etcd directories
      file:
        path: "{{ item }}"
        recurse: yes
        owner: postgres
        group: postgres
        mode: 0700
      with_items:
        - "{{ etcd_files.conf_dir }}"
        - "{{ etcd_files.data_dir }}"

    - name: reload systemd and start service
      systemd:
        name: etcd
        state: started
        daemon_reload: yes
        enabled: yes

    - name: loop wait for etcd start
      shell: "etcdctl {{ endpoints_v3 }} {% if ssl_mode %}{{ etcdv3_ssl_connect }}{% endif %} endpoint health 2>&1"
      environment:
        ETCDCTL_API: 3
      register: result
      until: result.stdout.find("is healthy") != -1
      retries: 4
      delay: 3
      run_once: true

    - name: added roles and users in etcd
      command:
        cmd: 'etcdctl {{ endpoints_v3 }} {% if ssl_mode %}{{ etcdv3_ssl_connect }}{% endif %} {{ item }}'
      with_items:
        - "user add root:'{{ etcd_root_pass }}'"
        - "user add patronietcd:'{{ patroni_etcd_pass }}'"
        - "--user=root:'{{ etcd_root_pass }}' role add patroni"
        - "role grant-permission patroni readwrite --prefix=true /service/"
        - "--user=root:'{{ etcd_root_pass }}' user grant-role patronietcd patroni"
        - "--user=root:'{{ etcd_root_pass }}' auth enable"
      run_once: true
      environment:
        ETCDCTL_API: 3
      no_log: "{{ nolog }}"

    #TODO remove after switching to etcd v3
    - name: added roles and users in etcd for api v2
      command:
        cmd: 'etcdctl {{ endpoints_v2 }} {% if ssl_mode %}{{ etcdv2_ssl_connect }}{% endif %} {{ item }}'
      with_items:
        - "user add root:'{{ etcd_root_pass }}'"
        - "user add patronietcd:'{{ patroni_etcd_pass }}'"
        - "-u root:'{{ etcd_root_pass }}' role add patroni"
        - "role grant patroni -path '/service/*' -readwrite"
        - "-u root:'{{ etcd_root_pass }}' user grant patronietcd -roles patroni"
        - "-u root:'{{ etcd_root_pass }}' auth enable"
        - "-u root:'{{ etcd_root_pass }}' role revoke guest -path '/*' --readwrite"
      run_once: true
      environment:
        ETCDCTL_API: 2
      no_log: "{{ nolog }}"

  become: true

- name: Include_role
  include_role:
    name: common
    tasks_from: bash_profile
  vars:
    component_name: 'etcd'