include 'postgresql.base.conf'
authentication_proxy = '1'
authentication_port = '{{ ports.pgbouncer_pg_auth }}'
auth_activity_period  = '60'
{% if stand == 'prom' %}
archive_mode = 'always'
{% else %}
archive_mode = 'off'
{% endif %}
archive_command = '{{ PGHOME }}/bin/pg_probackup archive-push -B {{ PGBACKUP }} --instance {{ clustername }} --wal-file-path=%p --wal-file-name=%f --compress --overwrite -j 4 --batch-size=100'
archive_timeout = '180'
autovacuum_work_mem = '{{ (ansible_memtotal_mb/48)|int|abs }}MB'
checkpoint_completion_target = '0.9'
checkpoint_timeout = '1800'
#debug_print_parse = 'True'
#debug_print_rewritten = 'True'
#debug_print_plan = 'True'
default_statistics_target = '100'
effective_cache_size = '{{ (ansible_memtotal_mb/2)|int|abs }}MB'
effective_io_concurrency = '300' # set to 200 if SSD drives are used
fsync = 'on'
full_page_writes = 'on'
hot_standby = 'on'
hot_standby_feedback = 'on'
{% if tag is defined %}
installer.cluster_type = '{{ tag }}'
{% endif %}
listen_addresses = '0.0.0.0'
syslog_facility = 'LOCAL3'
syslog_ident = 'postgres'
syslog_sequence_numbers = 'on'
syslog_split_messages = 'off'
log_checkpoints = 'True'
log_connections = 'True'
log_destination = 'stderr'
log_directory = '{{ PGLOGS }}'
log_disconnections = 'True'
log_file_mode = 0644
log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log'
log_line_prefix = '%t [%p]: [%l-1] app=%a,user=%u,db=%d,client=%h '
log_lock_waits = 'on'
log_min_duration_statement = '5000'
log_min_error_statement = 'WARNING'
log_replication_commands = 'on'
log_rotation_age = '1440'
log_rotation_size = '100MB'
log_statement = 'none'
log_temp_files = '0'
log_truncate_on_rotation = 'True'
logging_collector = 'True'
client_min_messages = 'notice'
log_timezone = 'Europe/Moscow'
datestyle = 'iso, mdy'
timezone = 'Europe/Moscow'
lc_messages = 'en_US.utf8'
lc_monetary = 'en_US.utf8'
lc_numeric = 'en_US.utf8'
lc_time = 'en_US.utf8'
default_text_search_config = 'pg_catalog.english'
maintenance_work_mem = '{{ (ansible_memtotal_mb/24)|int|abs }}MB'
max_connections = '{{ pg_max_connections }}'
max_locks_per_transaction = '64'
max_parallel_workers = '{{ ansible_processor_vcpus }}'
max_parallel_workers_per_gather = '{{ (ansible_processor_vcpus/2)|int|abs }}'
max_prepared_transactions = '{{ ansible_processor_vcpus*3 }}'
max_replication_slots = '10'
max_standby_archive_delay = '30s'
max_standby_streaming_delay = '30s'
max_wal_senders = '10'
max_wal_size = '4GB'
{% if ansible_processor_vcpus < 8 %}
max_worker_processes = '8'
{% else -%}
max_worker_processes = '{{ ansible_processor_vcpus }}'
{% endif %}
min_wal_size = '2GB'
monitoring_ldap_servers = {% if segment == 'alpha' %}'^ca.sbrf.ru$|^omega.sbrf.ru$'
                          {% elif segment == 'sigma' %}'^sigma.sbrf.ru$'
                          {% elif segment == 'delta' %}'^delta.sbrf.ru$'
                          {% elif segment == 'sbercloud' %}'^ldap-todo.sw.sbc.space$'{% endif %}
pgaudit.log = 'ddl, role, connection, misc_set'
password_encryption = 'scram-sha-256'
#password_policies
password_policy.deny_default = '{{ password_policy_params.deny_default }}'
password_policy.reuse_time = '{{ password_policy_params.reuse_time }}'
password_policy.in_history = '{{ password_policy_params.in_history }}'
password_policy.max_age = '{{ password_policy_params.max_age }}'
password_policy.min_age = '{{ password_policy_params.min_age }}'
password_policy.grace_login_limit = '{{ password_policy_params.grace_login_limit }}'
password_policy.grace_login_time_limit = '{{ password_policy_params.grace_login_time_limit }}'
password_policy.expire_warning = '{{ password_policy_params.expire_warning }}'
password_policy.lockout = '{{ password_policy_params.lockout }}'
password_policy.lockout_duration = '{{ password_policy_params.lockout_duration }}'
password_policy.max_failure = '{{ password_policy_params.max_failure }}'
password_policy.failure_count_interval = '{{ password_policy_params.failure_count_interval }}'
password_policy.check_syntax = '{{ password_policy_params.check_syntax }}'
password_policy.min_length = '{{ password_policy_params.min_length }}'
password_policy.illegal_values = '{{ password_policy_params.illegal_values }}'
password_policy.alpha_numeric = '{{ password_policy_params.alpha_numeric }}'
password_policy.min_alpha_chars = '{{ password_policy_params.min_alpha_chars }}'
password_policy.min_special_chars = '{{ password_policy_params.min_special_chars }}'
password_policy.min_uppercase = '{{ password_policy_params.min_uppercase }}'
password_policy.min_lowercase = '{{ password_policy_params.min_lowercase }}'
password_policy.max_rpt_chars = '{{ password_policy_params.max_rpt_chars }}'
password_policy.track_login = '{{ password_policy_params.track_login }}'
password_policy.max_inactivity = '{{ password_policy_params.max_inactivity }}'
password_policy.use_password_strength_estimator = '{{ password_policy_params.use_password_strength_estimator }}'
password_policy.password_strength_estimator_score = '{{ password_policy_params.password_strength_estimator_score }}'
password_policy.deduplicate_ssl_no_ssl_fail_auth_attepmts = '{{ password_policy_params.deduplicate_ssl_no_ssl_fail_auth_attepmts }}'
password_policy.allow_hashed_password = '{{ password_policy_params.allow_hashed_password }}'
psql_encrypt_password = 'on'
password_policies_enable = 'on'
pg_hint_plan.parse_messages = 'warning'
pg_hint_plan.debug_print = 'off'
pg_hint_plan.message_level = 'debug'
cron.database_name = 'postgres'
cron.max_running_jobs = '3'
port = '{{ ports.pg }}'
random_page_cost = '2.0'
search_path = 'ext'
shared_buffers ={% if ansible_memtotal_mb < 65536 %} '4GB'{% else %} '8GB'{% endif %}
shared_preload_libraries = 'auto_explain,pg_stat_statements,pg_cron,pg_hint_plan,pg_pathman'
{% if ansible_processor_vcpus <= 8 %}
superuser_reserved_connections = '4'
{% else %}
superuser_reserved_connections = '10'
{% endif %}
synchronous_commit = 'on'
track_commit_timestamp = 'off'
unix_socket_directories = '/var/run/postgresql/'
wal_buffers = '16MB'
wal_keep_segments = '500'
wal_level = 'replica'
wal_log_hints = 'on'
wal_receiver_status_interval = '1s'
wal_sync_method = 'fsync'
work_mem ={% if ansible_memtotal_mb < 65536 %} '16384kB'{% else %} '32768kB'{% endif %}
ssl = 'on'
ssl_cert_file = '{{ PGSSL }}/{{ ansible_fqdn }}.crt'
ssl_key_file = '{{ PGSSL }}/{{ ansible_fqdn }}.key'
ssl_ca_file = '{{ PGSSL }}/root.crt'
{% if tde is defined and tde %}
dynamic_shared_memory_type = 'posix'
is_tde_on = 'on'
pg_plugins_path = '{{PGHOME}}/lib'
mkeychecker_delay = '300'
{% else %}
is_tde_on = 'off'
{% endif %}
hba_file = '{{ PGDATA }}/pg_hba.conf'
ident_file = '{{ PGDATA }}/pg_ident.conf'