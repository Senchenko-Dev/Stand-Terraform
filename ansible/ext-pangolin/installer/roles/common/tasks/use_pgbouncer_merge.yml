- name: Define version of current python interpreter
  set_fact:
    previous_python_interpreter: "{{ ansible_python_interpreter }}"

- name: Set python interpretator
  set_fact:
    ansible_python_interpreter: '{{ python.postgresql_venv }}/bin/python3'

- name: Define default root_path
  set_fact:
    _useamerge_root_path: ""
  when: _useamerge_root_path is undefined
  
- name: Define default result_cfg_file
  set_fact:
    _useamerge_result_cfg_file: ""
  when: _useamerge_result_cfg_file is undefined
  
- name: Define default new_cfg_file
  set_fact:
    _useamerge_new_cfg_file: ""
  when: _useamerge_new_cfg_file is undefined

- name: Define default new_cfg_file
  set_fact:
    _use_forceall: False
  when: _use_forceall is undefined

- name: Define default install type
  set_fact:
    _useamerge_type_install: "pgbouncer"
  when: _useamerge_type_install is undefined 

- name: Clear result
  set_fact:
    _useamerge_result: ""

- name: Run auto merge config module
  block:

    - name: copy differ template
      template:
        src: diff_pgbouncer_cfg.txt.j2
        dest: "{{ merge_cfg_root_dir }}/diff_pgbouncer_cfg.txt"
        owner: postgres
        group: postgres
        mode: 0600
        
    - name: use merge config module
      auto_merge_pgbouncer:
        ANSIBLE_MODULE_ARGS:
          old_config_path: "{{ _useamerge_old_cfg_file }}"
          new_config_path: "{{ _useamerge_new_cfg_file }}"
          result_config_path: "{{ _useamerge_result_cfg_file }}"
          diff_file_name: "{{ _useamerge_root_path }}/diff_pgbouncer_cfg.txt"
          type_install: "{{ _useamerge_type_install }}"
      register: is_success    
      environment:
        - PYTHONPATH: "{{ python.postgresql_venv_packages }}"

  become: true
  
- name: Check auto merge result
  assert:
    that: is_success.message == 0
    fail_msg: "{% if 'update' in action_type %}{{ control_name }}.FAIL__Ошибка во время мержа конфигов.__{{ control_name }}\
               {% else %}Result auto merge is incorrect{% endif %}"
    success_msg: "Result auto merge is correct"

- name: Save auto merge result
  set_fact:
    _useamerge_result: "{{ is_success.original_message }}"

- name: Set python interpretator
  set_fact:
    ansible_python_interpreter: '{{ previous_python_interpreter }}'