- name: Check for readme.txt
  block:

    - name: retrieve file status readme.txt
      stat: path={{ PGHOME }}/readme.txt
      register: stat_readme_txt

    - name: check file status readme.txt
      assert:
        that: stat_readme_txt.stat.exists
        fail_msg: "No file readme.txt in {{ PGHOME }}/"
        success_msg: "There is a file readme.txt in {{ PGHOME }}/"

  become: yes
  become_user: postgres

- name: Check for releasenotes.json
  block:

    - name: retrieve file status releasenotes.json
      stat: path={{ PGHOME }}/releasenotes.json
      register: stat_releasenotes_json

    - name: check file status releasenotes.json
      assert:
        that: stat_releasenotes_json.stat.exists
        fail_msg: "No file releasenotes.json in {{ PGHOME }}/"
        success_msg: "There is a file releasenotes.json in {{ PGHOME }}/"

  become: yes
  become_user: postgres

- name: Get a list of files documentation in the distrib
  find:
    path: "{{ local_distr_path }}/documentation"
    recurse: yes
  run_once: true
  register: internal_distrib_list
  delegate_to: localhost

- name: Replace paths
  set_fact:
    internal_node_list: "{{ internal_node_list | default([]) + [item.path | replace(local_distr_path, PGHOME)] }}"
  with_items: "{{ internal_distrib_list.files }}"

- name: Check for documentation
  block:

    - name: retrieve directory status documentation
      stat:
        path: "{{ PGHOME }}/documentation"
      register: internal_docdir_stat

    - name: check directory status documentation
      assert:
        that: internal_docdir_stat.stat.exists
        fail_msg: "There is no doc directory in {{ PGHOME }}"
        success_msg: "There is a doc directory in {{ PGHOME }}"

    - name: retrieve files status documentation
      stat:
        path: "{{ item }}"
      register: internal_node_stat_list
      with_items: "{{ internal_node_list }}"

    - name: check files status documentation
      assert:
        that: "{{ item.stat.exists }}"
        fail_msg: "No file {{ item.item }}"
        success_msg: "There is a file {{ item.item }}"
      with_items: "{{ internal_node_stat_list.results }}"

  become: yes
  become_user: postgres