- name: Test local connet for user postgres
  block:

    - name: define version of current python interpreter
      set_fact:
        previous_python_interpreter: '{{ ansible_python_interpreter }}'

    - name: set python interpretator and connection string
      set_fact:
        ansible_python_interpreter: '{{ python.postgresql_venv }}/bin/python3'

    - name: test local connect postgres
      postgresql_query:
        port: "{{ PGPORT_OLD }}"
        query: SELECT version();
      register: check_connect
      ignore_errors: true

    - name: print rlm message if postgres cant connect
      assert:
        that: not 'unable to connect to database' in check_connect.msg
        fail_msg: "{{ control_name }}.FAIL__Локальный для {{ inventory_hostname }} пользователь postgres не может подключиться к БД используя сертификаты. Возможные причины: \
        1.Проверьте валидность дат сертификатов командами: \
        openssl x509 -in {{ pg_certs_pwd.postgres_cert }} -noout -enddate; \
        openssl x509 -in {{ pg_certs_pwd.root_ca }} -noout -enddate; \
        2.Проверить принадлежность сертификатов  к одному УЦ с помощью команд: \
        openssl x509 -in {{ pg_certs_pwd.postgres_cert }} -noout -text; \
        openssl x509 -in {{ pg_certs_pwd.root_ca }} -noout -text; \
        openssl x509 -in <значение параметра ssl_cert_file из конфига postgresql.conf> -noout -text; \
        3.Проверьте наличие строки подключения в pg_hba 'hostssl all postgres {{ ansible_default_ipv4.address }}/32 cert'__{{ control_name }}.FAIL"
      when: check_connect.failed

    - name: print rlm message if connect failed with another case
      fail:
        msg: "{{ control_name }}.FAIL__Не удалось осуществить тестовый коннект к БД на {{ inventory_hostname }}. Обратитесь к администраторам СУБД за помощью__{{ control_name }}.FAIL"
      when: check_connect.failed

    - name: check status cracklib files
      stat:
        path: "{{ PGHOME_OLD }}/lib/{{ item }}"
      register: cracklib_files_exists
      with_items:
        - libcrack.so
        - pw_dict.hwm
        - pw_dict.pwd
        - pw_dict.pwi

    - name: set cracklib_files_exists_list
      set_fact:
        cracklib_files_exists_list: "{{ cracklib_files_exists.results|
                                       map('dict2items')|list|flatten|
                                       json_query('[?key==`stat`].value')|flatten|
                                       map('dict2items')|list|
                                       json_query('[*][?key==`exists`].value')|flatten|
                                       join(', ') }}"

    - name: print rlm message if cracklib missing
      assert:
        that: "'False' not in cracklib_files_exists_list"
        fail_msg: "{{ control_name }}.FAIL__Библиотека cracklib не найдена. Обратитесь к администраторам СУБД за решением__{{ control_name }}.FAIL"

  always:

    - name: set python interpretator
      set_fact:
        ansible_python_interpreter: '{{ previous_python_interpreter }}'

  environment: "{{ db_connection_args }}"
  become: true
  become_user: postgres
  when: inventory_hostname != 'etcd'