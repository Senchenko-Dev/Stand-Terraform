#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    log         127.0.0.1  local0 debug
    log         127.0.0.1  local1 notice
    {% if ssl_mode %}
    tune.ssl.default-dh-param 2048
    {% endif %}
    chroot      {{ haproxy_files.socket_dir }}
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        postgres
    group       postgres
    daemon
 
    # turn on stats unix socket
    stats socket {{ haproxy_files.socket_dir }}/stats
 
#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option                  redispatch
    retries                 2
    timeout http-request    10s
    timeout queue           1m
    timeout connect         4s
    timeout client          30m
    timeout server          30m
    timeout http-keep-alive 10s
    timeout check           5s
    maxconn                 3000
 
frontend fe_postgresql
    mode tcp
    option tcplog
    bind *:{{ ports.haproxy }}
    default_backend be_postgres
 
backend be_postgres
   mode tcp
   option tcplog
   option httpchk OPTIONS /master #
   http-check expect status 200
   default-server inter 3s fall 3 rise 2 on-marked-down shutdown-sessions #
   {% for host in groups['postgres_group'] %}
server {{ hostvars[host].ansible_fqdn }} {{ hostvars[host].ansible_fqdn }}:{{ hostvars[host].ports.pgbouncer }} {% if ssl_mode %}verify none check-ssl{% endif %} check port {{ hostvars[host].ports.patroni }}
   {% endfor %}

listen stats
    mode http
    bind *:7000 {% if ssl_mode %}ssl crt {{ pg_certs_pwd.haproxy_cert }}{% endif %}
    stats enable
    stats uri /
    {% if ssl_mode %}
    stats auth {{ haproxy_stat_login }}:{{ haproxy_stat_pass }}
    acl whitelist src {{ hosts_access_list }}
    tcp-request connection reject if ! whitelist
    {% endif %}