- name: Check SRC exists
  block:

    - name: define variable with pre state of src files
      set_fact:
        is_src_exists: false
        is_src_exists_and_not_correct: false
        current_src_manage_backup_sh_file_prefix_name: 'null'

    - name: set name of python module for backup process
      set_fact:
        _chcksrcexst_name_of_manage_backup_module: "{% if ( [ pg_current_version, '4.4.0' ] | compare_pg_se_versions )|int == 0 %}manage_backup.py\
                                                    {% else %}manage_backup.bin{% endif %}"

    - name: find path to manage_backup.sh file
      find:
        paths: "{{ manage_backup_bin }}"
        use_regex: yes
        patterns:  '^[\d]*\_manage_backup\.sh'
      register: _chcksrcexst_manage_backup_sh_file

    - name: find path to pg_se_archlogs sh file
      find:
        paths: "{{ manage_backup_bin }}"
        use_regex: yes
        patterns:  '^[\d]*\_pg_se_archlogs\.sh'
      register: _chcksrcexst_pg_se_archlogs_file

    - name: find path to python module for backup process
      find:
        paths: "{{ manage_backup_bin }}"
        use_regex: yes
        patterns:  '^[\d]*\_{{ _chcksrcexst_name_of_manage_backup_module }}'
      register: _chcksrcexst_manage_backup_file

    - name: define variable with path to manage_backup sh file
      set_fact:
        path_to_manage_backup_sh_file: "{{ _chcksrcexst_manage_backup_sh_file['files'][0].path }}"
      when: _chcksrcexst_manage_backup_sh_file.matched == 1

    - name: define variable with path to pg_se_archlogs sh file
      set_fact:
       path_to_pg_se_archlogs_sh_file: "{{ _chcksrcexst_pg_se_archlogs_file['files'][0].path }}"
      when: _chcksrcexst_pg_se_archlogs_file.matched == 1

    - name: define variable with path to manage_backup module
      set_fact:
        path_to_manage_backup_module: "{{ _chcksrcexst_manage_backup_file['files'][0].path }}"
      when: _chcksrcexst_manage_backup_file.matched == 1

    - name: define variable with finally state of src files
      set_fact:
        is_src_exists: true
      when: "path_to_manage_backup_sh_file is defined \
             or path_to_pg_se_archlogs_sh_file is defined \
             or path_to_manage_backup_module is defined"

    - name: check that src files exist and correct
      set_fact:
        is_src_exists_and_not_correct: true
      when: "is_src_exists \
             and (path_to_manage_backup_sh_file is undefined \
                  or path_to_pg_se_archlogs_sh_file is undefined \
                  or path_to_manage_backup_module is undefined)"

    - name: define current src manage_backup.sh prefix name
      set_fact:
        current_src_manage_backup_sh_file_prefix_name: "{{ path_to_manage_backup_sh_file.split('/')[-1].split('_')[0] }}"
      when: path_to_manage_backup_sh_file is defined