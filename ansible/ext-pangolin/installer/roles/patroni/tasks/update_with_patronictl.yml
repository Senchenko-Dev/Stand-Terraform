- name: Update parameter with patronictl
  block:
    
    - name: define default command for patronictl 
      set_fact:
        endpoint: config
      when: endpoint_name is undefined

    - name: define command for patronictl
      set_fact:
        endpoint: "{{ endpoint_name }}"
      when: endpoint_name is defined
    
    - name: check directory with new patroni
      stat:
        path: "{{ python.patroni_venv }}/bin/patronictl"
      register: patronictl_file

    - name: change params with patronictl
      block:
        
        - name: create temp config file 
          file:
            path: "{{ REMOTE_TMP }}/patronictlconf.yml"
            owner: postgres
            group: postgres
            mode: '0600'
            state: touch

        - name: add param
          lineinfile:
            path: "{{ REMOTE_TMP }}/patronictlconf.yml"
            line: "{{ change_params }}"

        - name: execute patronictl
          shell: |
            {% if not patronictl_file.stat.exists %}{{ PYTHON_VENV_OLD }}\
            {% else %}{{ python.patroni_venv }}{% endif %}/bin/patronictl -c {{ patroni_files.conf_dir }}/postgres.yml  edit-config --apply \
            {{ REMOTE_TMP }}/patronictlconf.yml --force

        - name: wait when patroni reload configuration file
          pause:
            seconds: 20

        - name: drop temp config file 
          file:
            path: "{{ REMOTE_TMP }}/patronictlconf.yml"
            state: absent

      when: endpoint == 'config'
      
    - name: reload patroni with patronictl
      block:

        - name: execute patronictl
          shell: "{% if not patronictl_file.stat.exists %}{{ PYTHON_VENV_OLD }}\
                  {% else %}{{ python.patroni_venv }}{% endif %}/bin/patronictl -c {{ patroni_files.conf_dir }}/postgres.yml reload {{ clustername }} --force"
  
        - name: wait when patroni reload configuration file
          pause:
            seconds: 20
      
      when: endpoint == 'reload'

    - name: restart patroni with patronictl
      block:

        - name: execute patronictl
          shell: "{% if not patronictl_file.stat.exists %}{{ PYTHON_VENV_OLD }}\
                  {% else %}{{ python.patroni_venv }}{% endif %}/bin/patronictl -c {{ patroni_files.conf_dir }}/postgres.yml restart   {{ clustername }} --force"

        - name: wait when patroni reload configuration file
          pause:
            seconds: 20
      
      when: endpoint == 'restart'

    - name: switch patroni with patronictl
      block:

      - name: send switchover command
        shell: "{% if not patronictl_file.stat.exists %}{{ PYTHON_VENV_OLD }}\
                {% else %}{{ python.patroni_venv }}{% endif %}/bin/patronictl -c {{ patroni_files.conf_dir }}/postgres.yml switchover {{ clustername }} --force"
      
      - name: wait when patroni reload configuration file
        pause:
          seconds: 20
    
      when: endpoint == 'switch'

    - name: reinit patroni with patronictl
      block:

        - name: send reinit command
          shell: "{% if not patronictl_file.stat.exists %}{{ PYTHON_VENV_OLD }}\
                  {% else %}{{ python.patroni_venv }}{% endif %}/bin/patronictl -c {{ patroni_files.conf_dir }}/postgres.yml reinit {{ clustername }} --force"
      
        - name: wait when patroni reload configuration file
          pause:
            seconds: 20

      when: endpoint == 'reinit'

    - name: check temp file exist
      stat:
        path: "{{ REMOTE_TMP }}/patronictlconf.yml"
      register: temp_file_exist

    - name: drop temp config file
      file:
        path: "{{ REMOTE_TMP }}/patronictlconf.yml"
        state: absent
      become: true
      become_user: postgres
      when: temp_file_exist.stat.exists
  
  become: true
  become_user: postgres
  environment:
    - LD_LIBRARY_PATH: "{{ PGHOME }}/lib"
  when: inventory_hostname != 'etcd' and patroni