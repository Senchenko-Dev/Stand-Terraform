- name: Update parameter with patronictl
  block:
  
    - name: define default command for patronictl
      set_fact:
        endpoint: config
      when: endpoint_name is undefined

    - name: define command for patronictl
      set_fact:
        endpoint: "{{ endpoint_name }}"
      when: endpoint_name is defined

    - name: check directory with new patroni
      stat:
        path: "{{ python.patroni_venv }}/bin/patronictl"
      register: patronictl_file

    - name: set patroni venv
      set_fact:
        _updatepatronictl_set_patroni_venv: "{% if not patronictl_file.stat.exists %}{{ PYTHON_VENV_OLD }}{% else %}{{ python.patroni_venv }}{% endif %}"

    - name: change params with patronictl
      block:

        - name: drop temp config file "{{ REMOTE_TMP }}/patronictlconf.yml"
          file:
            path: "{{ REMOTE_TMP }}/patronictlconf.yml"
            state: absent

        - name: create temp config file "{{ REMOTE_TMP }}/patronictlconf.yml"
          file:
            path: "{{ REMOTE_TMP }}/patronictlconf.yml"
            owner: postgres
            group: postgres
            mode: '0600'
            state: touch

        - name: add param
          lineinfile:
            path: "{{ REMOTE_TMP }}/patronictlconf.yml"
            line: "{{ change_params }}"

        - name: execute patronictl for change params
          shell: |
            {{ _updatepatronictl_set_patroni_venv }}/bin/patronictl -c {{ patroni_files.conf_dir }}/postgres.yml edit-config --apply \
            {{ REMOTE_TMP }}/patronictlconf.yml --force

      run_once: true
      when: endpoint == 'config'

    - name: cluster forced commands
      block:

      - name: reload patroni with patronictl
        shell: "{{ _updatepatronictl_set_patroni_venv }}/bin/patronictl -c {{ patroni_files.conf_dir }}/postgres.yml reload {{ clustername }} --force"
        when: endpoint == 'reload'

      - name: restart patroni with patronictl
        shell: "{{ _updatepatronictl_set_patroni_venv }}/bin/patronictl -c {{ patroni_files.conf_dir }}/postgres.yml restart {{ clustername }} --force"
        when: endpoint == 'restart'

      - name: switch patroni with patronictl
        shell: "{{ _updatepatronictl_set_patroni_venv }}/bin/patronictl -c {{ patroni_files.conf_dir }}/postgres.yml switchover {{ clustername }} --force"
        when: endpoint == 'switch'

      - name: reinit patroni with patronictl
        shell: "{{ _updatepatronictl_set_patroni_venv }}/bin/patronictl -c {{ patroni_files.conf_dir }}/postgres.yml reinit {{ clustername }} {{ current_replica_for_reinit }} --force"
        when: endpoint == 'reinit'

      run_once: true

    - name: wait when patroni reload configuration file
      pause:
        seconds: "{{ patroni_wait_seconds }}"
      run_once: true

    - name: drop temp config file "{{ REMOTE_TMP }}/patronictlconf.yml" after patroni config reload
      file:
        path: "{{ REMOTE_TMP }}/patronictlconf.yml"
        state: absent

  become: true
  become_user: postgres
  environment:
    - LD_LIBRARY_PATH: "{{ PGHOME }}/lib"
  when: inventory_hostname != 'etcd' and patroni
