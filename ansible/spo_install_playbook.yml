---
- hosts: all
  become: yes
  serial: "{{ rolling_update_serial | default('100%') }}"
  gather_facts: no

  tasks:

    - debug:
        var: vault_file 

    # - shell: ls -la "{{ vault_file }}"
    #   delegate_to: localhost
    #   register: ll

    # - debug:
    #     var: ll.stdout_lines

    - name: "{{ spo_role_name | upper }} Import secrets" 
      include_vars: "{{ vault_file }}"
      tags: always
      delegate_to: localhost
      become: no
      #no_log: yes # todo !!!!!!
      when: vault_file is defined

    - name: Collect facts
      setup:
      tags: always

    - import_role:
        name: "{{ spo_role_name }}"
      # become: yes

    - name: Copy additional files
      copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        mode: "{{ item.mode }}"
        owner: "{{ item.owner }}"
        group: "{{item.group }}"
      loop: "{{ list_maps_custom_files | default([]) }}"
      notify: restart_service
      become: yes

    - name: Copy additional templated files
      template:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        force: "{{ force | default('yes') }}"
        mode: "{{ item.mode}}" # If mode is not specified and the destination file does exist, the mode of the existing file will be us
        owner: "{{ item.owner }}"
        group: "{{ item.group }}"
      loop: "{{ list_maps_custom_templates | default([]) }}"
      notify: restart_service
      become: yes

    - name: Execute destination file if requested
      shell: "{{item.dest}}"
      loop: "{{ list_maps_custom_files | default([]) + list_maps_custom_templates | default([]) }}"
      when:
        - item.execute is defined
        - item.execute|bool
      become: yes


  # post_tasks:
  #   - include_vars: "{{ 'roles/' + spo_role_name + '/defaults/remove.yml' }}"
  #   - name: Remove data after ended tasks
  #     file:
  #       path: "{{ item }}"
  #       state: absent
  #     loop:
  #       - "{{ remove_data }}"
  #     ignore_errors: true

################-test-#################
    - name: execute bash script
      shell: "{{item.dest}}"
      loop: "{{ list_maps_custom_files | default([]) + list_maps_custom_templates | default([]) }}"
      when:
        - item.execute is defined
        - item.execute|bool
      become: yes



# todo import? иначе надо прописывать тэги во всей роли sbt-spo-utils
#    - import_role:
#        name: sbt-spo-utils
#        tasks_from: additional.yml
#      tags: always
