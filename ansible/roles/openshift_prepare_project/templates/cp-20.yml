apiVersion: maistra.io/v2
kind: ServiceMeshControlPlane
metadata:
  name: {{ cp.name }}
  namespace: {{ project }}
spec:
  security:
    controlPlane:
      mtls: false
    dataPlane:
      mtls: false
  tracing:
    sampling: 10000
    type: Jaeger
  profiles:
    - default
  proxy:
    accessLogging:
      file:
        name: /dev/stdout
    networking:
      trafficControl:
        inbound: {}
        outbound:
          policy: REGISTRY_ONLY
    runtime:
      container:
        resources:
          limits:
            cpu: 200m
            memory: 512Mi
          requests:
            cpu: 200m
            memory: 256Mi
  gateways:
    enabled: false
  techPreview:
    global:
      defaultConfigVisibilitySettings:
        - .
    tracing:
      jaeger:
        install: true
  policy:
    type: Istiod
  addons:
    grafana:
      enabled: true
    jaeger:
      install:
        ingress:
          enabled: true
        storage:
          type: Memory
    kiali:
      enabled: true
    prometheus:
      enabled: true
  version: v2.0
  runtime:
    components:
      kiali:
        container:
          resources:
            limits:
              cpu: 1100m
              memory: 1500Mi
            requests:
              cpu: 400m
              memory: 750Mi
      pilot:
        container:
          resources:
            limits:
              cpu: '2'
              memory: 4Gi
            requests:
              cpu: '2'
              memory: 4Gi
        deployment:
          replicas: 3
      prometheus:
        container:
          resources:
            limits:
              cpu: 1100m
              memory: 1500Mi
            requests:
              cpu: 400m
              memory: 750Mi
    defaults:
      container:
        resources:
          limits:
            cpu: 800m
            memory: 1000Mi
          requests:
            cpu: 400m
            memory: 750Mi
  telemetry:
    type: Istiod
  cluster: {}
status:
  observedGeneration: 1
  annotations:
    alwaysReadyComponents: 'mesh-config,telemetry-common,tracing,kiali'
    readyComponentCount: 7/7
  readiness:
    components:
      pending: []
      ready:
        - grafana
        - istio-discovery
        - kiali
        - mesh-config
        - prometheus
        - telemetry-common
        - tracing
      unready: []
  operatorVersion: 2.0.6-4.el8
  components:
    - conditions:
        - lastTransitionTime: '2021-11-09T07:42:48Z'
          message: Component installed successfully
          reason: InstallSuccessful
          status: 'True'
          type: Reconciled
        - lastTransitionTime: '2021-11-09T07:42:48Z'
          message: Component installed successfully
          reason: InstallSuccessful
          status: 'True'
          type: Installed
      resource: istio-discovery
    - conditions:
        - lastTransitionTime: '2021-11-09T07:43:13Z'
          message: Component installed successfully
          reason: InstallSuccessful
          status: 'True'
          type: Reconciled
        - lastTransitionTime: '2021-11-09T07:43:13Z'
          message: Component installed successfully
          reason: InstallSuccessful
          status: 'True'
          type: Installed
      resource: mesh-config
    - conditions:
        - lastTransitionTime: '2021-11-09T07:43:13Z'
          message: Component installed successfully
          reason: InstallSuccessful
          status: 'True'
          type: Reconciled
        - lastTransitionTime: '2021-11-09T07:43:13Z'
          message: Component installed successfully
          reason: InstallSuccessful
          status: 'True'
          type: Installed
      resource: telemetry-common
    - conditions:
        - lastTransitionTime: '2021-11-09T07:43:14Z'
          message: Component installed successfully
          reason: InstallSuccessful
          status: 'True'
          type: Reconciled
        - lastTransitionTime: '2021-11-09T07:43:14Z'
          message: Component installed successfully
          reason: InstallSuccessful
          status: 'True'
          type: Installed
      resource: prometheus
    - conditions:
        - lastTransitionTime: '2021-11-09T07:43:45Z'
          message: Component installed successfully
          reason: InstallSuccessful
          status: 'True'
          type: Reconciled
        - lastTransitionTime: '2021-11-09T07:43:45Z'
          message: Component installed successfully
          reason: InstallSuccessful
          status: 'True'
          type: Installed
      resource: tracing
    - conditions:
        - lastTransitionTime: '2021-11-09T07:43:45Z'
          message: Component installed successfully
          reason: InstallSuccessful
          status: 'True'
          type: Reconciled
        - lastTransitionTime: '2021-11-09T07:43:45Z'
          message: Component installed successfully
          reason: InstallSuccessful
          status: 'True'
          type: Installed
      resource: grafana
    - conditions:
        - lastTransitionTime: '2021-11-09T07:44:06Z'
          message: Component installed successfully
          reason: InstallSuccessful
          status: 'True'
          type: Reconciled
        - lastTransitionTime: '2021-11-09T07:44:06Z'
          message: Component installed successfully
          reason: InstallSuccessful
          status: 'True'
          type: Installed
      resource: kiali
  appliedSpec:
    security:
      controlPlane:
        mtls: false
      dataPlane:
        mtls: false
      identity:
        type: Kubernetes
    tracing:
      sampling: 10000
      type: Jaeger
    general:
      logging:
        componentLevels:
          default: warn
    profiles:
      - default
    proxy:
      accessLogging:
        file:
          name: /dev/stdout
      injection:
        autoInject: false
      networking:
        dns:
          refreshRate: 300s
        initialization:
          initContainer:
            runtime:
              imageName: >-
                registry.redhat.io/openshift-service-mesh/proxy-init-rhel7@sha256:0d3f18d764241c1aa95d028b4d28acd163407b5a8781ad2b39c63a925f30e137
        protocol:
          autoDetect:
            inbound: false
            outbound: false
        trafficControl:
          inbound: {}
          outbound:
            policy: REGISTRY_ONLY
      runtime:
        container:
          imageName: >-
            registry.redhat.io/openshift-service-mesh/proxyv2-rhel8@sha256:dbb1f724333f6892d53f13c9619dcf3eff572b06c944c28fe6ad12fa18a7dc7b
          resources:
            limits:
              cpu: 200m
              memory: 512Mi
            requests:
              cpu: 200m
              memory: 256Mi
    gateways:
      egress:
        enabled: true
        runtime:
          container:
            resources:
              requests:
                cpu: 10m
                memory: 128Mi
          deployment:
            autoScaling:
              enabled: false
        service: {}
      enabled: false
      ingress:
        enabled: true
        ingress: false
        runtime:
          container:
            resources:
              requests:
                cpu: 10m
                memory: 128Mi
          deployment:
            autoScaling:
              enabled: false
        service:
          type: ClusterIP
      openshiftRoute:
        enabled: true
    techPreview:
      global:
        configNamespace: control-panel-efs-std-mg-20
        configRootNamespace: control-panel-efs-std-mg-20
        defaultConfigVisibilitySettings:
          - .
        istioNamespace: control-panel-efs-std-mg-20
        policyNamespace: control-panel-efs-std-mg-20
        prometheusNamespace: control-panel-efs-std-mg-20
        telemetryNamespace: control-panel-efs-std-mg-20
        tracer:
          zipkin:
            address: 'jaeger-collector.control-panel-efs-std-mg-20.svc:9411'
      istio_cni:
        istio_cni_network: v2-0-istio-cni
      kiali:
        install: false
      revision: basic-install
      sidecarInjectorWebhook:
        objectSelector:
          enabled: false
      tracing:
        jaeger:
          install: true
      wasmExtensions:
        enabled: false
    policy:
      type: Istiod
    addons:
      grafana:
        enabled: true
        install:
          service:
            ingress:
              enabled: true
            metadata:
              annotations:
                service.alpha.openshift.io/serving-cert-secret-name: grafana-tls
      jaeger:
        install:
          ingress:
            enabled: true
          storage:
            type: Memory
        name: jaeger
      kiali:
        enabled: true
        install:
          dashboard:
            viewOnly: false
          service:
            ingress:
              enabled: true
        name: kiali
      prometheus:
        enabled: true
        install:
          service:
            ingress:
              enabled: true
            metadata:
              annotations:
                service.alpha.openshift.io/serving-cert-secret-name: prometheus-tls
    version: v2.0
    runtime:
      components:
        kiali:
          container:
            resources:
              limits:
                cpu: 1100m
                memory: 1500Mi
              requests:
                cpu: 400m
                memory: 750Mi
        global.oauthproxy:
          container:
            imageName: >-
              quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:440effdfec3d11aff76ee73ddd593bbcc5c08b7e97baae5bad709c16b8915cde
            imagePullPolicy: IfNotPresent
            imageRegistry: registry.redhat.io/openshift4
            imageTag: v4.4
        grafana:
          container:
            imageName: >-
              registry.redhat.io/openshift-service-mesh/grafana-rhel8@sha256:061c5840f55e80802faccb330bd10b71403192fecf6a74b3d14ed817ff95b319
        wasmExtensions.cacher:
          container:
            imageName: >-
              registry.redhat.io/openshift-service-mesh/pilot-rhel8@sha256:df4ecd1abc5e573135bc0ef910c5a9a1d089e3c9824993919932700807048ebd
            resources:
              requests:
                cpu: 10m
                memory: 128Mi
        mixer:
          container:
            imageName: >-
              registry.redhat.io/openshift-service-mesh/mixer-rhel8@sha256:3b728bee542f899ea8897a2b9b20fb242cbe902f9a222c1b7510a7831069b0a6
        prometheus:
          container:
            imageName: >-
              registry.redhat.io/openshift-service-mesh/prometheus-rhel8@sha256:2ade73924b1c6b6d2a5a083008c7a62d9eb137af070f6efcd7c0ee59f923e8de
            resources:
              limits:
                cpu: 1100m
                memory: 1500Mi
              requests:
                cpu: 400m
                memory: 750Mi
        mixer.telemetry:
          container:
            imageName: >-
              registry.redhat.io/openshift-service-mesh/mixer-rhel8@sha256:3b728bee542f899ea8897a2b9b20fb242cbe902f9a222c1b7510a7831069b0a6
            resources:
              requests:
                cpu: 10m
                memory: 128Mi
          deployment:
            autoScaling:
              enabled: false
        3scale:
          container:
            imageName: >-
              registry.redhat.io/openshift-service-mesh/3scale-istio-adapter-rhel8@sha256:ffadc13f865f34a6f9a94655baee9e379177b274f7ec0bc30d042c2d034bed3b
            imageRegistry: registry.redhat.io/openshift-service-mesh
            imageTag: 2.0.0
        mixer.policy:
          container:
            imageName: >-
              registry.redhat.io/openshift-service-mesh/mixer-rhel8@sha256:3b728bee542f899ea8897a2b9b20fb242cbe902f9a222c1b7510a7831069b0a6
            resources:
              requests:
                cpu: 10m
                memory: 128Mi
          deployment:
            autoScaling:
              enabled: false
        pilot:
          container:
            imageName: >-
              registry.redhat.io/openshift-service-mesh/pilot-rhel8@sha256:df4ecd1abc5e573135bc0ef910c5a9a1d089e3c9824993919932700807048ebd
            resources:
              limits:
                cpu: '2'
                memory: 4Gi
              requests:
                cpu: '2'
                memory: 4Gi
          deployment:
            autoScaling:
              enabled: false
            replicas: 3
      defaults:
        container:
          imageRegistry: registry.redhat.io/openshift-service-mesh
          imageTag: 2.0.6
          resources:
            limits:
              cpu: 800m
              memory: 1000Mi
            requests:
              cpu: 400m
              memory: 750Mi
        deployment:
          podDisruption:
            enabled: false
    telemetry:
      type: Istiod
  conditions:
    - lastTransitionTime: '2021-11-09T07:44:31Z'
      message: Successfully installed all mesh components
      reason: InstallSuccessful
      status: 'True'
      type: Installed
    - lastTransitionTime: '2021-11-09T07:44:31Z'
      message: Successfully installed version 2.0.6-4.el8-1
      reason: InstallSuccessful
      status: 'True'
      type: Reconciled
    - lastTransitionTime: '2021-11-22T09:46:29Z'
      message: All component deployments are Available
      reason: ComponentsReady
      status: 'True'
      type: Ready
  chartVersion: 2.0.6.2
  appliedValues:
    istio:
      kiali:
        dashboard:
          viewOnlyMode: false
        enabled: true
        ingress:
          enabled: true
        install: false
        resourceName: kiali
        resources:
          limits:
            cpu: 1100m
            memory: 1500Mi
          requests:
            cpu: 400m
            memory: 750Mi
      tracing:
        enabled: true
        ingress:
          enabled: true
        jaeger:
          install: true
          resourceName: jaeger
          template: all-in-one
        provider: jaeger
      global:
        proxy_init:
          image: >-
            registry.redhat.io/openshift-service-mesh/proxy-init-rhel7@sha256:0d3f18d764241c1aa95d028b4d28acd163407b5a8781ad2b39c63a925f30e137
        multiCluster:
          enabled: false
          multiClusterOverrides:
            expansionEnabled: null
            multiClusterEnabled: null
        telemetryNamespace: control-panel-efs-std-mg-20
        controlPlaneSecurityEnabled: false
        defaultResources:
          limits:
            cpu: 800m
            memory: 1000Mi
          requests:
            cpu: 400m
            memory: 750Mi
        policyNamespace: control-panel-efs-std-mg-20
        istioNamespace: control-panel-efs-std-mg-20
        tracer:
          zipkin:
            address: 'jaeger-collector.control-panel-efs-std-mg-20.svc:9411'
        mtls:
          enabled: false
        proxy:
          accessLogFile: /dev/stdout
          autoInject: disabled
          dnsRefreshRate: 300s
          image: >-
            registry.redhat.io/openshift-service-mesh/proxyv2-rhel8@sha256:dbb1f724333f6892d53f13c9619dcf3eff572b06c944c28fe6ad12fa18a7dc7b
          resources:
            limits:
              cpu: 200m
              memory: 512Mi
            requests:
              cpu: 200m
              memory: 256Mi
          tracer: zipkin
        k8sIngress:
          enableHttps: false
          enabled: false
          gatewayName: ingressgateway
        prometheusNamespace: control-panel-efs-std-mg-20
        meshExpansion:
          enabled: false
          useILB: false
        hub: registry.redhat.io/openshift-service-mesh
        oauthproxy:
          hub: registry.redhat.io/openshift4
          image: >-
            quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:440effdfec3d11aff76ee73ddd593bbcc5c08b7e97baae5bad709c16b8915cde
          imagePullPolicy: IfNotPresent
          tag: v4.4
        configRootNamespace: control-panel-efs-std-mg-20
        defaultConfigVisibilitySettings:
          - .
        configNamespace: control-panel-efs-std-mg-20
        jwtPolicy: first-party-jwt
        tag: 2.0.6
        defaultPodDisruptionBudget:
          enabled: false
        outboundTrafficPolicy:
          mode: REGISTRY_ONLY
        enableTracing: true
        logging:
          level: 'default:warn'
      grafana:
        enabled: true
        image: >-
          registry.redhat.io/openshift-service-mesh/grafana-rhel8@sha256:061c5840f55e80802faccb330bd10b71403192fecf6a74b3d14ed817ff95b319
        ingress:
          enabled: true
        service:
          annotations:
            service.alpha.openshift.io/serving-cert-secret-name: grafana-tls
      sidecarInjectorWebhook:
        enableNamespacesByDefault: false
        objectSelector:
          enabled: false
      mixer:
        adapters:
          prometheus:
            enabled: true
        image: >-
          registry.redhat.io/openshift-service-mesh/mixer-rhel8@sha256:3b728bee542f899ea8897a2b9b20fb242cbe902f9a222c1b7510a7831069b0a6
        policy:
          autoscaleEnabled: false
          enabled: false
          image: >-
            registry.redhat.io/openshift-service-mesh/mixer-rhel8@sha256:3b728bee542f899ea8897a2b9b20fb242cbe902f9a222c1b7510a7831069b0a6
          resources:
            requests:
              cpu: 10m
              memory: 128Mi
        telemetry:
          autoscaleEnabled: false
          enabled: false
          image: >-
            registry.redhat.io/openshift-service-mesh/mixer-rhel8@sha256:3b728bee542f899ea8897a2b9b20fb242cbe902f9a222c1b7510a7831069b0a6
          resources:
            requests:
              cpu: 10m
              memory: 128Mi
      prometheus:
        enabled: true
        image: >-
          registry.redhat.io/openshift-service-mesh/prometheus-rhel8@sha256:2ade73924b1c6b6d2a5a083008c7a62d9eb137af070f6efcd7c0ee59f923e8de
        ingress:
          enabled: true
        resources:
          limits:
            cpu: 1100m
            memory: 1500Mi
          requests:
            cpu: 400m
            memory: 750Mi
        service:
          annotations:
            service.alpha.openshift.io/serving-cert-secret-name: prometheus-tls
      gateways:
        enabled: false
        istio-egressgateway:
          autoscaleEnabled: false
          enabled: true
          gatewayType: egress
          name: istio-egressgateway
          resources:
            requests:
              cpu: 10m
              memory: 128Mi
        istio-ingressgateway:
          autoscaleEnabled: false
          enabled: true
          gatewayType: ingress
          ior_enabled: true
          name: istio-ingressgateway
          resources:
            requests:
              cpu: 10m
              memory: 128Mi
          type: ClusterIP
      istio_cni:
        enabled: true
        istio_cni_network: v2-0-istio-cni
      policy:
        implementation: Istiod
      wasmExtensions:
        cacher:
          image: >-
            registry.redhat.io/openshift-service-mesh/pilot-rhel8@sha256:df4ecd1abc5e573135bc0ef910c5a9a1d089e3c9824993919932700807048ebd
          resources:
            requests:
              cpu: 10m
              memory: 128Mi
        enabled: false
      pilot:
        autoscaleEnabled: false
        enableProtocolSniffingForInbound: false
        enableProtocolSniffingForOutbound: false
        image: >-
          registry.redhat.io/openshift-service-mesh/pilot-rhel8@sha256:df4ecd1abc5e573135bc0ef910c5a9a1d089e3c9824993919932700807048ebd
        replicaCount: 3
        resources:
          limits:
            cpu: '2'
            memory: 4Gi
          requests:
            cpu: '2'
            memory: 4Gi
        traceSampling: 100
      telemetry:
        enabled: true
        implementation: Istiod
        v1:
          enabled: false
        v2:
          enabled: true
          prometheus:
            enabled: true
      revision: basic-install
    profiles:
      - default
    template: default
    threeScale:
      hub: registry.redhat.io/openshift-service-mesh
      image: >-
        registry.redhat.io/openshift-service-mesh/3scale-istio-adapter-rhel8@sha256:ffadc13f865f34a6f9a94655baee9e379177b274f7ec0bc30d042c2d034bed3b
      tag: 2.0.0
    version: v2.0
