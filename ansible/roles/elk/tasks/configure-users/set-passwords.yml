---
#- name: Start service elasticsearch 
#  service:
#    name: "{{ item.name }}"
#    state: started
#  with_items: "{{ os_conf_packages }}"
#  when: item.name in required_packages and item.name == 'elasticsearch'
  
#- name: Wait elasticsearch port
#  wait_for:
#    host: "{{ ansible_default_ipv4.address }}"
#    port: 9200
#    delay: 10
#    connect_timeout: 5

#- set_fact:
#    elastic_new_password: "{{ item.password }}"
#  with_items: 
#    - "{{ es_users }}"
#  when: item.name == 'elastic'
  
#- name: Check cluster health
#  uri: 
#    url: "http://{{ ansible_default_ipv4.address }}:9200/_cluster/health?pretty"
#    method: GET
#    user: "elastic"
#    #password: "{{ es_elastic_password.results[0].stdout }}"
#    password: "{{ elastic_new_password }}"
#    return_content: yes
#  register: es_check_health
#  ignore_errors: yes
    
#- debug:
#    var: es_check_health

- name: Random generate password for elastic user
  shell: "{{ ES_HOME }}/bin/elasticsearch-reset-password -b -s -a -u {{ item }} --url  http://{{ ansible_default_ipv4.address }}:9200"
  with_items:
    - 'elastic'
  register: es_elastic_password
  when: es_check_health != 200
  
- debug:
    var: es_elastic_password.results

- debug: 
    var: "{{ es_users }}"

- debug:
    var: "{{ item }}"
  with_items: 
    - "{{ es_users }}"

- debug:
    msg: "user: {{ item.name }} passwd: {{ item.password }}"
  with_items: 
    - "{{ es_users }}"

- name: Set password for elasic user
  uri:
    url: "http://{{ ansible_default_ipv4.address }}:9200/_security/user/elastic/_password?pretty"
    method: POST
    user: "elastic"
    password: "{{ es_elastic_password.results[0].stdout }}"
    status_code: [200]
    force_basic_auth: yes
    body: {"password": "{{ elastic_new_password }}"}
    body_format: json
    headers:
      Content-Type: application/json
  when: elastic_new_password is defined

- name: Set password for other users
  uri:
    url: "http://{{ ansible_default_ipv4.address }}:9200/_security/user/{{ item.name }}/_password?pretty"
    method: POST
    user: "elastic"
    password: "{{ elastic_new_password | default(es_users[0]['password']) }}"
    status_code: [200]
    force_basic_auth: yes
    body: {"password": "{{ item.password }}"}
    body_format: json
    headers:
      Content-Type: application/json
  with_items:
    - "{{ es_users }}"
  when: item.name != 'elastic'

# - name: Start service kibana
#   service:
#     name: "{{ item.name }}"
#     state: started
#   with_items: "{{ os_conf_packages }}"
#   when: item.name in required_packages and item.name == 'kibana'
