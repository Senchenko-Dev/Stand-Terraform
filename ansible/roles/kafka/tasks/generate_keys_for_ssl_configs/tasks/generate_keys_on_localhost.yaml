--- ### These tasks do on localhost
- name: Delete Old ~/ssl Directory if Exists
  file:
    path: ssl
    state: absent

- name: Create Dir for Key and Keystore Files
  file:
    path: ssl
    state: directory
    recurse: yes
    owner: "{{ kafka_user }}"

- debug: msg="Generate certificate authority (CA) Cert and Key for Signing other's Keys"

- name: Generate CA Cert and Key
  command: openssl req -nodes -new -x509 -keyout ca-key -out ca-cert -days 365 -subj "/C=RU/ST=MO/L=Moscow/O=Sberbank-Technology/OU=Kafka Competence Center DBPC/CN=Kafka"
  args:
    chdir: ssl

- name: Create Truststore JKS and Import CA Cert
  command: keytool -keystore kafka.truststore.jks -alias CARoot -import -file ca-cert -storepass qwe123 -noprompt
  args:
    chdir: ssl

- debug: msg="Generate Server and Client Keystore for Security Configuration {{ KDeployConf }}"

- name: "Create Keystore JKS {{ item }}.keystore.jks with Unsigned {{ item }} Key"
  command: keytool -noprompt -keystore {{ item }}.keystore.jks -storepass qwe123 -keypass qwe123 -alias {{ item }} -validity 365 -genkey -keyalg RSA -dname "CN={{ item }}"
  args:
    chdir: ssl
  with_items:
    - 'broker'
    - 'client'
    - 'root'

- name: "Get Unsigned {{ item }} Cert for Signing With CA"
  command: keytool -keystore {{ item }}.keystore.jks -storepass qwe123 -alias {{ item }} -certreq -file {{ item }}.unsigned.crt
  args:
    chdir: ssl
  with_items:
    - 'broker'
    - 'client'
    - 'root'

- name: "Signing {{ item }} Cert with CA Key"
  command: openssl x509 -req -CA ca-cert -CAkey ca-key -in {{ item }}.unsigned.crt -out {{ item }}.signed.crt -days 365 -CAcreateserial
  args:
    chdir: ssl
  with_items:
    - 'broker'
    - 'client'
    - 'root'

- name: "Import CA Key to {{ item }}.keystore.jks"
  command: keytool -keystore {{ item }}.keystore.jks -alias CARoot -import -file ca-cert -storepass qwe123 -noprompt
  args:
    chdir: ssl
  with_items:
    - 'broker'
    - 'client'
    - 'root'

- name: "Import Signed {{ item }} Cert to {{ item }}.keystore.jks"
  command: keytool -keystore {{ item }}.keystore.jks -alias {{ item }} -import -file {{ item }}.signed.crt -storepass qwe123 -noprompt
  args:
    chdir: ssl
  with_items:
    - 'broker'
    - 'client'
    - 'root'

- name: Search for Unnecessary Temporary Files
  find:
    paths: ssl
    use_regex: yes
    patterns:
      - '^ca-.*srl'
      - '.*\.signed\.crt$'
      - '.*\.unsigned\.crt$'
  register: files_to_delete

- name: Removing Unnecessary Temporary Files
  file:
    path: "{{ item.path }}"
    state: absent
  no_log: true
  with_items: "{{ files_to_delete.files }}"
