---
- debug: msg="Use Server JDK"
  when: UseServerJDK is defined and UseServerJDK

- block: # Use custom JDK from local path or Nexus URL

  - fail: msg="Attention!!! An error was detected! DestJDK is undefined or not correct (Path must be absolute and valid). Check the correctness of the entered data."
    when: not DestJDK is search('^(\/[\w-]+)+(.[\w-]+?)$') or DestJDK is undefined #check absolute path

  #If URL is specified
  - name: "Get JDK from from Nexus URL = '{{ SourceJDK }}'"
    include_tasks: jdk_from_nexus.yaml
    when: SourceJDK is search('^[https]*?:\/\/.*$')
  #If local path is specified
  - name: "Get JDK from from Local Path = '{{ SourceJDK }}'"
    include_tasks: jdk_from_local_path.yaml
    when: SourceJDK is search('^([\/]*[\w-]+)+(.[\w-]+?)$')

  - fail: msg="Attention!!! An error was detected! File jdk*.tar.gz with JDK is not found in {{ SourceJDK }}. Check the correctness of parameters UseServerJDK or SourceJDK"
    when: jdk_file_source_path is undefined or jdk_file_source_path | length == 0
    delegate_to: localhost

  - fail: msg="Attention!!! An error was detected! More than one jdk * .tar.gz file found in '{{ SourceJDK }}', there should only be one. Check the files in path '{{ SourceJDK }}'."
    when: jdk_file_source_path is defined and jdk_file_source_path | count > 1
    delegate_to: localhost

  - name: Create JDK Dir
    file:
      path: "{{ DestJDK }}"
      state: directory
      recurse: yes
      owner: "{{kafka_user }}"

  - name: Copy JDK to Host
    unarchive:
      src: "{{ jdk_file_source_path[0] }}"
      dest: "{{ DestJDK }}"
      owner: "{{kafka_user }}"
      extra_opts: [--strip-components=1]
    when: not UseServerJDK or UseServerJDK is undefined

  when: (UseServerJDK is undefined or not UseServerJDK) and (SourceJDK is defined and SourceJDK | length > 0)
  any_errors_fatal: true
