---
- name: Graceful Stop Kafka Broker
  command: "{{ broker_id_path_port_logdir.1 }}/bin/kafka-server-stop{{ script_extension }}"
  ignore_errors: yes  # "Suppress less informative ansible error output in favour of our own error output. E.g.: bin/kafka-server-stop will return "No Kafka server to stop" instead of ansible error message like "process ended with exit code 0""
  when: not ForceStop or ForceStop is undefined

- block:
    - name: Gather Facts on Listening Ports
      listen_ports_facts:

    - name: Get Port to Kill for Summary Information on ForceStop
      debug:
        msg: "Kill Broker on ForceStop"
      vars:
        tcp_listen_violations: "{{ ansible_facts.tcp_listen | selectattr('port', 'in', [ broker_id_path_port_logdir.2 | int ]) | list }}"
      loop: "{{ tcp_listen_violations }}"
      register: killed_process_result
      no_log: True

    - name: Kill The Kafka Broker Processes on ForceStop
      shell: "kill -9 {{ item.pid }}"
      vars:
        tcp_listen_violations: "{{ ansible_facts.tcp_listen | selectattr('port', 'in', [ broker_id_path_port_logdir.2 | int ]) | list }}"
      loop: "{{ tcp_listen_violations }}"
      ignore_errors: yes # "Suppress less informative ansible error output in favour of our own error output. E.g.: kill -9 item.pid will return "No such process" instead of ansible error message like "non-zero return code""

  when: ForceStop or ForceStop is defined

- name: Wait 60 sec for Kafka Broker to Stop
  wait_for:
    host: "{{ ansible_host }}"
    port: "{{ broker_id_path_port_logdir.2 }}"
    delay: 5
    timeout: 60
    state: stopped
  any_errors_fatal: true

- name: Removing a Znode of Killed Broker Without Waiting for a Timeout on ForceStop
  command: bin/zookeeper-shell{{ script_extension }} {{ groups['ZookeeperNodes'][0] }}:{{ hostvars[groups.ZookeeperNodes[0]]['ZPorts'] | first }} deleteall /brokers/ids/{{ broker_id_path_port_logdir.0 }}
  args:
    chdir: "{{ DistroDirs[0] }}"
  ignore_errors: yes # "Suppress less informative ansible error output in favour of our own error output. E.g.: "Node does not exist" instead of ansible error message like "non-zero return code""
  when: ForceStop or ForceStop is defined

### After stop broker perform actions based on playbooks name
- include_role:
    name: set_kafka_props
  when: ansible_play_name == 'set_kafka_props_with_rolling_update'
###

- name: "Start Kafka Broker with Server JDK"
  include_tasks: start_kafka_with_server_jdk.yaml
  when: UseServerJDK is defined and UseServerJDK

- name: "Start Kafka Broker with Custom JDK"
  include_tasks: start_kafka_with_custom_jdk.yaml
  when: SourceJDK is defined

- name: Wait 60 sec for Kafka Brokers to Start
  wait_for:
    host: "{{ ansible_host }}"
    port: "{{ broker_id_path_port_logdir.2 }}"
    delay: 3
    timeout: 60
  any_errors_fatal: true
